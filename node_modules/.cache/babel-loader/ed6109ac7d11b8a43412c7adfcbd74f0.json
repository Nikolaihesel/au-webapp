{"ast":null,"code":"var _jsxFileName = \"/Users/nikolai/Desktop/au-webapp/src/Components/CountDowntimer.js\";\nimport '../assets/infobeam.scss';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { useCountdown } from 'react-countdown-circle-timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountDowntimer() {\n  const renderTime = _ref => {\n    let {\n      remainingTime\n    } = _ref;\n    const minutes = Math.floor(remainingTime / 60);\n    const seconds = remainingTime % 60;\n    return `${minutes}:${seconds}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"value\",\n        children: remainingTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n      isPlaying: true,\n      duration: 900,\n      colors: [\"#2374d2\", \"#37ff96\"],\n      colorsTime: [10, 20, 30],\n      size: 100,\n      isSmoothColorTransition: true,\n      onComplete: () => ({\n        shouldRepeat: false\n      }),\n      children: renderTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = CountDowntimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDowntimer\");","map":{"version":3,"names":["CountdownCircleTimer","useCountdown","CountDowntimer","renderTime","remainingTime","minutes","Math","floor","seconds","shouldRepeat"],"sources":["/Users/nikolai/Desktop/au-webapp/src/Components/CountDowntimer.js"],"sourcesContent":["import '../assets/infobeam.scss'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport { useCountdown } from 'react-countdown-circle-timer'\n\nexport default function CountDowntimer() {\n\n   const renderTime = ({ remainingTime }) => {\n         const minutes = Math.floor(remainingTime / 60)\n  const seconds = remainingTime % 60\n  return `${minutes}:${seconds}`\n\n\n\n\n\nreturn (\n    <div className=\"timer\">\n      <div className=\"value\">{remainingTime}</div>\n    </div>\n  );\n\n\n}\n\n\n\n\n\n\n  return (\n    <div className=\"counter\">\n   <CountdownCircleTimer\n          isPlaying\n          duration={900}\n          colors={[\"#2374d2\", \"#37ff96\"]}\n          colorsTime={[10, 20, 30]}\n           size={100}\n          isSmoothColorTransition\n          onComplete={() => ({ shouldRepeat: false })}\n         \n        >\n          {renderTime}\n    \n        </CountdownCircleTimer>\n\n\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAO,yBAAP;AACA,SAASA,oBAAT,QAAqC,8BAArC;AACA,SAASC,YAAT,QAA6B,8BAA7B;;AAEA,eAAe,SAASC,cAAT,GAA0B;EAEtC,MAAMC,UAAU,GAAG,QAAuB;IAAA,IAAtB;MAAEC;IAAF,CAAsB;IACpC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAG,EAA3B,CAAhB;IACP,MAAMI,OAAO,GAAGJ,aAAa,GAAG,EAAhC;IACA,OAAQ,GAAEC,OAAQ,IAAGG,OAAQ,EAA7B;IAMF,oBACI;MAAK,SAAS,EAAC,OAAf;MAAA,uBACE;QAAK,SAAS,EAAC,OAAf;QAAA,UAAwBJ;MAAxB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADJ;EAOC,CAhBE;;EAuBD,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,uBACD,QAAC,oBAAD;MACO,SAAS,MADhB;MAEO,QAAQ,EAAE,GAFjB;MAGO,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAHf;MAIO,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAJnB;MAKQ,IAAI,EAAE,GALd;MAMO,uBAAuB,MAN9B;MAOO,UAAU,EAAE,OAAO;QAAEK,YAAY,EAAE;MAAhB,CAAP,CAPnB;MAAA,UAUQN;IAVR;MAAA;MAAA;MAAA;IAAA;EADC;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;KA5CuBD,c"},"metadata":{},"sourceType":"module"}